//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollectorQi.Droid.santacolomba_dts.totvscloud.com.br {
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExecBOServiceEndpointBinding", Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class WebServiceExecBO : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback callProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback callProcedureWithCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback callProcedureWithTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback callProcedureWithTokenAndCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback userAndPasswordLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLoginOperationCompleted;
        
        /// CodeRemarks
        public WebServiceExecBO() {
            this.Url = "https://santacolomba-dts-teste.totvscloud.com.br/wsexecbo/WebServiceExecBO";
        }
        
        public WebServiceExecBO(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event callProcedureCompletedEventHandler callProcedureCompleted;
        
        /// CodeRemarks
        public event callProcedureWithCompanyCompletedEventHandler callProcedureWithCompanyCompleted;
        
        /// CodeRemarks
        public event callProcedureWithTokenCompletedEventHandler callProcedureWithTokenCompleted;
        
        /// CodeRemarks
        public event callProcedureWithTokenAndCompanyCompletedEventHandler callProcedureWithTokenAndCompanyCompleted;
        
        /// CodeRemarks
        public event loginCompletedEventHandler loginCompleted;
        
        /// CodeRemarks
        public event logoutSessionCompletedEventHandler logoutSessionCompleted;
        
        /// CodeRemarks
        public event userAndPasswordLoginCompletedEventHandler userAndPasswordLoginCompleted;
        
        /// CodeRemarks
        public event userLoginCompletedEventHandler userLoginCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("callProcedureResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public callProcedureResponse callProcedure([System.Xml.Serialization.XmlElementAttribute("callProcedure", Namespace="http://service.execbo.ws.framework.totvs.com")] callProcedure callProcedure1) {
            object[] results = this.Invoke("callProcedure", new object[] {
                        callProcedure1});
            return ((callProcedureResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void callProcedureAsync(callProcedure callProcedure1) {
            this.callProcedureAsync(callProcedure1, null);
        }
        
        /// CodeRemarks
        public void callProcedureAsync(callProcedure callProcedure1, object userState) {
            if ((this.callProcedureOperationCompleted == null)) {
                this.callProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallProcedureOperationCompleted);
            }
            this.InvokeAsync("callProcedure", new object[] {
                        callProcedure1}, this.callProcedureOperationCompleted, userState);
        }
        
        private void OncallProcedureOperationCompleted(object arg) {
            if ((this.callProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callProcedureCompleted(this, new callProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("callProcedureWithCompanyResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public callProcedureWithCompanyResponse callProcedureWithCompany([System.Xml.Serialization.XmlElementAttribute("callProcedureWithCompany", Namespace="http://service.execbo.ws.framework.totvs.com")] callProcedureWithCompany callProcedureWithCompany1) {
            object[] results = this.Invoke("callProcedureWithCompany", new object[] {
                        callProcedureWithCompany1});
            return ((callProcedureWithCompanyResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void callProcedureWithCompanyAsync(callProcedureWithCompany callProcedureWithCompany1) {
            this.callProcedureWithCompanyAsync(callProcedureWithCompany1, null);
        }
        
        /// CodeRemarks
        public void callProcedureWithCompanyAsync(callProcedureWithCompany callProcedureWithCompany1, object userState) {
            if ((this.callProcedureWithCompanyOperationCompleted == null)) {
                this.callProcedureWithCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallProcedureWithCompanyOperationCompleted);
            }
            this.InvokeAsync("callProcedureWithCompany", new object[] {
                        callProcedureWithCompany1}, this.callProcedureWithCompanyOperationCompleted, userState);
        }
        
        private void OncallProcedureWithCompanyOperationCompleted(object arg) {
            if ((this.callProcedureWithCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callProcedureWithCompanyCompleted(this, new callProcedureWithCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("callProcedureWithTokenResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public callProcedureWithTokenResponse callProcedureWithToken([System.Xml.Serialization.XmlElementAttribute("callProcedureWithToken", Namespace="http://service.execbo.ws.framework.totvs.com")] callProcedureWithToken callProcedureWithToken1) {
            object[] results = this.Invoke("callProcedureWithToken", new object[] {
                        callProcedureWithToken1});
            return ((callProcedureWithTokenResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void callProcedureWithTokenAsync(callProcedureWithToken callProcedureWithToken1) {
            this.callProcedureWithTokenAsync(callProcedureWithToken1, null);
        }
        
        /// CodeRemarks
        public void callProcedureWithTokenAsync(callProcedureWithToken callProcedureWithToken1, object userState) {
            if ((this.callProcedureWithTokenOperationCompleted == null)) {
                this.callProcedureWithTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallProcedureWithTokenOperationCompleted);
            }
            this.InvokeAsync("callProcedureWithToken", new object[] {
                        callProcedureWithToken1}, this.callProcedureWithTokenOperationCompleted, userState);
        }
        
        private void OncallProcedureWithTokenOperationCompleted(object arg) {
            if ((this.callProcedureWithTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callProcedureWithTokenCompleted(this, new callProcedureWithTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("callProcedureWithTokenAndCompanyResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public callProcedureWithTokenAndCompanyResponse callProcedureWithTokenAndCompany([System.Xml.Serialization.XmlElementAttribute("callProcedureWithTokenAndCompany", Namespace="http://service.execbo.ws.framework.totvs.com")] callProcedureWithTokenAndCompany callProcedureWithTokenAndCompany1) {
            object[] results = this.Invoke("callProcedureWithTokenAndCompany", new object[] {
                        callProcedureWithTokenAndCompany1});
            return ((callProcedureWithTokenAndCompanyResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void callProcedureWithTokenAndCompanyAsync(callProcedureWithTokenAndCompany callProcedureWithTokenAndCompany1) {
            this.callProcedureWithTokenAndCompanyAsync(callProcedureWithTokenAndCompany1, null);
        }
        
        /// CodeRemarks
        public void callProcedureWithTokenAndCompanyAsync(callProcedureWithTokenAndCompany callProcedureWithTokenAndCompany1, object userState) {
            if ((this.callProcedureWithTokenAndCompanyOperationCompleted == null)) {
                this.callProcedureWithTokenAndCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallProcedureWithTokenAndCompanyOperationCompleted);
            }
            this.InvokeAsync("callProcedureWithTokenAndCompany", new object[] {
                        callProcedureWithTokenAndCompany1}, this.callProcedureWithTokenAndCompanyOperationCompleted, userState);
        }
        
        private void OncallProcedureWithTokenAndCompanyOperationCompleted(object arg) {
            if ((this.callProcedureWithTokenAndCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callProcedureWithTokenAndCompanyCompleted(this, new callProcedureWithTokenAndCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("loginResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public loginResponse login([System.Xml.Serialization.XmlElementAttribute("login", Namespace="http://service.execbo.ws.framework.totvs.com")] login login1) {
            object[] results = this.Invoke("login", new object[] {
                        login1});
            return ((loginResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void loginAsync(login login1) {
            this.loginAsync(login1, null);
        }
        
        /// CodeRemarks
        public void loginAsync(login login1, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        login1}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("logoutSessionResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public logoutSessionResponse logoutSession([System.Xml.Serialization.XmlElementAttribute("logoutSession", Namespace="http://service.execbo.ws.framework.totvs.com")] logoutSession logoutSession1) {
            object[] results = this.Invoke("logoutSession", new object[] {
                        logoutSession1});
            return ((logoutSessionResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void logoutSessionAsync(logoutSession logoutSession1) {
            this.logoutSessionAsync(logoutSession1, null);
        }
        
        /// CodeRemarks
        public void logoutSessionAsync(logoutSession logoutSession1, object userState) {
            if ((this.logoutSessionOperationCompleted == null)) {
                this.logoutSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutSessionOperationCompleted);
            }
            this.InvokeAsync("logoutSession", new object[] {
                        logoutSession1}, this.logoutSessionOperationCompleted, userState);
        }
        
        private void OnlogoutSessionOperationCompleted(object arg) {
            if ((this.logoutSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutSessionCompleted(this, new logoutSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userAndPasswordLoginResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public userAndPasswordLoginResponse userAndPasswordLogin([System.Xml.Serialization.XmlElementAttribute("userAndPasswordLogin", Namespace="http://service.execbo.ws.framework.totvs.com")] userAndPasswordLogin userAndPasswordLogin1) {
            object[] results = this.Invoke("userAndPasswordLogin", new object[] {
                        userAndPasswordLogin1});
            return ((userAndPasswordLoginResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void userAndPasswordLoginAsync(userAndPasswordLogin userAndPasswordLogin1) {
            this.userAndPasswordLoginAsync(userAndPasswordLogin1, null);
        }
        
        /// CodeRemarks
        public void userAndPasswordLoginAsync(userAndPasswordLogin userAndPasswordLogin1, object userState) {
            if ((this.userAndPasswordLoginOperationCompleted == null)) {
                this.userAndPasswordLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserAndPasswordLoginOperationCompleted);
            }
            this.InvokeAsync("userAndPasswordLogin", new object[] {
                        userAndPasswordLogin1}, this.userAndPasswordLoginOperationCompleted, userState);
        }
        
        private void OnuserAndPasswordLoginOperationCompleted(object arg) {
            if ((this.userAndPasswordLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userAndPasswordLoginCompleted(this, new userAndPasswordLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("userLoginResponse", Namespace="http://service.execbo.ws.framework.totvs.com")]
        public userLoginResponse userLogin([System.Xml.Serialization.XmlElementAttribute("userLogin", Namespace="http://service.execbo.ws.framework.totvs.com")] userLogin userLogin1) {
            object[] results = this.Invoke("userLogin", new object[] {
                        userLogin1});
            return ((userLoginResponse)(results[0]));
        }
        
        /// CodeRemarks
        public void userLoginAsync(userLogin userLogin1) {
            this.userLoginAsync(userLogin1, null);
        }
        
        /// CodeRemarks
        public void userLoginAsync(userLogin userLogin1, object userState) {
            if ((this.userLoginOperationCompleted == null)) {
                this.userLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLoginOperationCompleted);
            }
            this.InvokeAsync("userLogin", new object[] {
                        userLogin1}, this.userLoginOperationCompleted, userState);
        }
        
        private void OnuserLoginOperationCompleted(object arg) {
            if ((this.userLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLoginCompleted(this, new userLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedure {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class userLoginResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class userLogin {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class userAndPasswordLoginResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class userAndPasswordLogin {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class logoutSessionResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class logoutSession {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class loginResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class login {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithTokenAndCompanyResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithTokenAndCompany {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg4;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithTokenResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithToken {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithCompanyResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureWithCompany {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg2;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg3;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.execbo.ws.framework.totvs.com")]
    public partial class callProcedureResponse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void callProcedureCompletedEventHandler(object sender, callProcedureCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public callProcedureResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((callProcedureResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void callProcedureWithCompanyCompletedEventHandler(object sender, callProcedureWithCompanyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callProcedureWithCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callProcedureWithCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public callProcedureWithCompanyResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((callProcedureWithCompanyResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void callProcedureWithTokenCompletedEventHandler(object sender, callProcedureWithTokenCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callProcedureWithTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callProcedureWithTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public callProcedureWithTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((callProcedureWithTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void callProcedureWithTokenAndCompanyCompletedEventHandler(object sender, callProcedureWithTokenAndCompanyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callProcedureWithTokenAndCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callProcedureWithTokenAndCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public callProcedureWithTokenAndCompanyResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((callProcedureWithTokenAndCompanyResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public loginResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loginResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void logoutSessionCompletedEventHandler(object sender, logoutSessionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public logoutSessionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((logoutSessionResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void userAndPasswordLoginCompletedEventHandler(object sender, userAndPasswordLoginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userAndPasswordLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userAndPasswordLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public userAndPasswordLoginResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userAndPasswordLoginResponse)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    public delegate void userLoginCompletedEventHandler(object sender, userLoginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.0.4.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public userLoginResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userLoginResponse)(this.results[0]));
            }
        }
    }
}
